package client.batch.input;

import javax.swing.BoxLayout;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

import shared.modal.Batch;
import shared.modal.Project;
import client.batch.state.BatchState;
import client.batch.state.BatchStateListener;
import client.batch.state.Cell;

@SuppressWarnings("serial")
public class BatchFieldEntryComponent extends JComponent {
	
	private JList<String> rowList;
	private JPanel entryPanel;
	
	public BatchFieldEntryComponent() {
		this.setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
		rowList = new JList<String>();
		JScrollPane listScrollPane = new JScrollPane(rowList);
		entryPanel = new JPanel();
		this.add(listScrollPane);
		this.add(entryPanel);
		
		BatchState.addBatchStateListener(new FormEntryBatchStateListener());
	}
	
	private void setupGUI() {
		int rowNum = BatchState.getProject().getRecordsPerBatch();
		String[] rowTitles = new String[rowNum];
		for (int i = 0; i < rowNum; i++) {
			rowTitles[i] = "" + (i+1);
		}
		
		rowList.setListData(rowTitles);
	}
	
	
	private class FormEntryBatchStateListener implements BatchStateListener {

		@Override
		public void selectedCellChanged(Cell newSelectedCell) {
			// TODO Auto-generated method stub
			
		}

		@Override
		public void newBatchLoaded(Batch newBatch, Project newProject) {
			
			setupGUI();
		}
		
	}

}
