package hangman;

import java.util.ArrayList;


public class HangmanKeyPattern {
	private int wordLength = 0;
	private char character = '-';
	private String key = "";
	private ArrayList<Integer> characterOcurrences = new ArrayList<Integer>();	
	
	public HangmanKeyPattern(String word, char character) {
		this.key = HangmanKeyPattern.getKeyFromWord(word, character);
		this.character = character;
		this.wordLength = word.length();
		this.characterOcurrences = HangmanKeyPattern.getOccurencesFromString(word, character);
	}
	
	public static String getKeyFromWord(String word, char character) {
		StringBuilder patternBuilder = new StringBuilder();
		
		for (int i = 0; i < word.length(); i++) {
			char curChar = Character.toLowerCase(word.charAt(i));
			character = Character.toLowerCase(character);
			
			if (curChar == character) {
				patternBuilder.append(character);
			}
			else {
				patternBuilder.append('-');
			}
		}
		
		return patternBuilder.toString();
	}
	
	public static ArrayList<Integer> getOccurencesFromString(String word, char character) {
		ArrayList<Integer> ocurrences = new ArrayList<Integer>();
		
		for (int i = 0; i < word.length(); i++) {
			char curChar = word.charAt(i);
			if (curChar == character) {
				ocurrences.add(new Integer(i));
			}
		}
		
		return ocurrences;
	}
	
	//Getters and Setters
	
	public String key() {
		return this.key;
	}
	
	public char getCharacter() {
		return this.character;
	}
	
	public int length() {
		return this.wordLength;
	}
	
	public ArrayList<Integer> getOcurrences() {
		return this.characterOcurrences;
	}
	
	// Main Method
	public static void main(String[] args) {
		System.out.println(HangmanKeyPattern.getKeyFromWord("Cinthia", 'i'));
	}
}
